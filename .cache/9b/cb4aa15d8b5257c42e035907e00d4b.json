{"id":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","dependencies":[{"name":"E:\\D\\WEBGLWITHPARCEL\\websiteWithWEBGL2\\package.json","includedInParent":true,"mtime":1630849169105},{"name":"E:\\D\\WEBGLWITHPARCEL\\websiteWithWEBGL2\\node_modules\\k-rpc-socket\\node_modules\\bencode\\package.json","includedInParent":true,"mtime":1630848962708},{"name":"./util.js","loc":{"line":1,"column":28},"parent":"E:\\D\\WEBGLWITHPARCEL\\websiteWithWEBGL2\\node_modules\\k-rpc-socket\\node_modules\\bencode\\lib\\encode.js","resolved":"E:\\D\\WEBGLWITHPARCEL\\websiteWithWEBGL2\\node_modules\\k-rpc-socket\\node_modules\\bencode\\lib\\util.js"},{"name":"buffer","parent":"E:\\D\\WEBGLWITHPARCEL\\websiteWithWEBGL2\\node_modules\\k-rpc-socket\\node_modules\\bencode\\lib\\encode.js","resolved":"E:\\D\\WEBGLWITHPARCEL\\websiteWithWEBGL2\\node_modules\\buffer\\index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nconst { getType } = require('./util.js')\n\n/**\n * Encodes data in bencode.\n *\n * @param  {Buffer|Array|String|Object|Number|Boolean} data\n * @return {Buffer}\n */\nfunction encode (data, buffer, offset) {\n  const buffers = []\n  let result = null\n\n  encode._encode(buffers, data)\n  result = Buffer.concat(buffers)\n  encode.bytes = result.length\n\n  if (Buffer.isBuffer(buffer)) {\n    result.copy(buffer, offset)\n    return buffer\n  }\n\n  return result\n}\n\nencode.bytes = -1\nencode._floatConversionDetected = false\n\nencode._encode = function (buffers, data) {\n  if (data == null) { return }\n\n  switch (getType(data)) {\n    case 'buffer': encode.buffer(buffers, data); break\n    case 'object': encode.dict(buffers, data); break\n    case 'map': encode.dictMap(buffers, data); break\n    case 'array': encode.list(buffers, data); break\n    case 'set': encode.listSet(buffers, data); break\n    case 'string': encode.string(buffers, data); break\n    case 'number': encode.number(buffers, data); break\n    case 'boolean': encode.number(buffers, data); break\n    case 'arraybufferview': encode.buffer(buffers, Buffer.from(data.buffer, data.byteOffset, data.byteLength)); break\n    case 'arraybuffer': encode.buffer(buffers, Buffer.from(data)); break\n  }\n}\n\nconst buffE = Buffer.from('e')\nconst buffD = Buffer.from('d')\nconst buffL = Buffer.from('l')\n\nencode.buffer = function (buffers, data) {\n  buffers.push(Buffer.from(data.length + ':'), data)\n}\n\nencode.string = function (buffers, data) {\n  buffers.push(Buffer.from(Buffer.byteLength(data) + ':' + data))\n}\n\nencode.number = function (buffers, data) {\n  const maxLo = 0x80000000\n  const hi = (data / maxLo) << 0\n  const lo = (data % maxLo) << 0\n  const val = hi * maxLo + lo\n\n  buffers.push(Buffer.from('i' + val + 'e'))\n\n  if (val !== data && !encode._floatConversionDetected) {\n    encode._floatConversionDetected = true\n    console.warn(\n      'WARNING: Possible data corruption detected with value \"' + data + '\":',\n      'Bencoding only defines support for integers, value was converted to \"' + val + '\"'\n    )\n    console.trace()\n  }\n}\n\nencode.dict = function (buffers, data) {\n  buffers.push(buffD)\n\n  let j = 0\n  let k\n  // fix for issue #13 - sorted dicts\n  const keys = Object.keys(data).sort()\n  const kl = keys.length\n\n  for (; j < kl; j++) {\n    k = keys[j]\n    if (data[k] == null) continue\n    encode.string(buffers, k)\n    encode._encode(buffers, data[k])\n  }\n\n  buffers.push(buffE)\n}\n\nencode.dictMap = function (buffers, data) {\n  buffers.push(buffD)\n\n  const keys = Array.from(data.keys()).sort()\n\n  for (const key of keys) {\n    if (data.get(key) == null) continue\n    Buffer.isBuffer(key)\n      ? encode._encode(buffers, key)\n      : encode.string(buffers, String(key))\n    encode._encode(buffers, data.get(key))\n  }\n\n  buffers.push(buffE)\n}\n\nencode.list = function (buffers, data) {\n  let i = 0\n  const c = data.length\n  buffers.push(buffL)\n\n  for (; i < c; i++) {\n    if (data[i] == null) continue\n    encode._encode(buffers, data[i])\n  }\n\n  buffers.push(buffE)\n}\n\nencode.listSet = function (buffers, data) {\n  buffers.push(buffL)\n\n  for (const item of data) {\n    if (item == null) continue\n    encode._encode(buffers, item)\n  }\n\n  buffers.push(buffE)\n}\n\nmodule.exports = encode\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}}],"sources":{"node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js":"const { getType } = require('./util.js')\n\n/**\n * Encodes data in bencode.\n *\n * @param  {Buffer|Array|String|Object|Number|Boolean} data\n * @return {Buffer}\n */\nfunction encode (data, buffer, offset) {\n  const buffers = []\n  let result = null\n\n  encode._encode(buffers, data)\n  result = Buffer.concat(buffers)\n  encode.bytes = result.length\n\n  if (Buffer.isBuffer(buffer)) {\n    result.copy(buffer, offset)\n    return buffer\n  }\n\n  return result\n}\n\nencode.bytes = -1\nencode._floatConversionDetected = false\n\nencode._encode = function (buffers, data) {\n  if (data == null) { return }\n\n  switch (getType(data)) {\n    case 'buffer': encode.buffer(buffers, data); break\n    case 'object': encode.dict(buffers, data); break\n    case 'map': encode.dictMap(buffers, data); break\n    case 'array': encode.list(buffers, data); break\n    case 'set': encode.listSet(buffers, data); break\n    case 'string': encode.string(buffers, data); break\n    case 'number': encode.number(buffers, data); break\n    case 'boolean': encode.number(buffers, data); break\n    case 'arraybufferview': encode.buffer(buffers, Buffer.from(data.buffer, data.byteOffset, data.byteLength)); break\n    case 'arraybuffer': encode.buffer(buffers, Buffer.from(data)); break\n  }\n}\n\nconst buffE = Buffer.from('e')\nconst buffD = Buffer.from('d')\nconst buffL = Buffer.from('l')\n\nencode.buffer = function (buffers, data) {\n  buffers.push(Buffer.from(data.length + ':'), data)\n}\n\nencode.string = function (buffers, data) {\n  buffers.push(Buffer.from(Buffer.byteLength(data) + ':' + data))\n}\n\nencode.number = function (buffers, data) {\n  const maxLo = 0x80000000\n  const hi = (data / maxLo) << 0\n  const lo = (data % maxLo) << 0\n  const val = hi * maxLo + lo\n\n  buffers.push(Buffer.from('i' + val + 'e'))\n\n  if (val !== data && !encode._floatConversionDetected) {\n    encode._floatConversionDetected = true\n    console.warn(\n      'WARNING: Possible data corruption detected with value \"' + data + '\":',\n      'Bencoding only defines support for integers, value was converted to \"' + val + '\"'\n    )\n    console.trace()\n  }\n}\n\nencode.dict = function (buffers, data) {\n  buffers.push(buffD)\n\n  let j = 0\n  let k\n  // fix for issue #13 - sorted dicts\n  const keys = Object.keys(data).sort()\n  const kl = keys.length\n\n  for (; j < kl; j++) {\n    k = keys[j]\n    if (data[k] == null) continue\n    encode.string(buffers, k)\n    encode._encode(buffers, data[k])\n  }\n\n  buffers.push(buffE)\n}\n\nencode.dictMap = function (buffers, data) {\n  buffers.push(buffD)\n\n  const keys = Array.from(data.keys()).sort()\n\n  for (const key of keys) {\n    if (data.get(key) == null) continue\n    Buffer.isBuffer(key)\n      ? encode._encode(buffers, key)\n      : encode.string(buffers, String(key))\n    encode._encode(buffers, data.get(key))\n  }\n\n  buffers.push(buffE)\n}\n\nencode.list = function (buffers, data) {\n  let i = 0\n  const c = data.length\n  buffers.push(buffL)\n\n  for (; i < c; i++) {\n    if (data[i] == null) continue\n    encode._encode(buffers, data[i])\n  }\n\n  buffers.push(buffE)\n}\n\nencode.listSet = function (buffers, data) {\n  buffers.push(buffL)\n\n  for (const item of data) {\n    if (item == null) continue\n    encode._encode(buffers, item)\n  }\n\n  buffers.push(buffE)\n}\n\nmodule.exports = encode\n"},"lineCount":136}},"error":null,"hash":"4ef2e408ffb7ccbcb4bf43ff88e8f906","cacheData":{"env":{}}}