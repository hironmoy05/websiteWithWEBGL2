{"id":"node_modules/connections/index.js","dependencies":[{"name":"E:\\D\\WEBGLWITHPARCEL\\websiteWithWEBGL2\\package.json","includedInParent":true,"mtime":1630849169105},{"name":"E:\\D\\WEBGLWITHPARCEL\\websiteWithWEBGL2\\node_modules\\connections\\package.json","includedInParent":true,"mtime":1630848951154},{"name":"events","loc":{"line":1,"column":21},"parent":"E:\\D\\WEBGLWITHPARCEL\\websiteWithWEBGL2\\node_modules\\connections\\index.js","resolved":"E:\\D\\WEBGLWITHPARCEL\\websiteWithWEBGL2\\node_modules\\events\\events.js"}],"generated":{"js":"var events = require('events')\n\nmodule.exports = function (servers) {\n  var sockets = []\n\n  if (!Array.isArray(servers)) servers = [servers]\n\n  for (var i = 0; i < servers.length; i++) {\n    servers[i].on('connection', add)\n  }\n\n  var obj = new events.EventEmitter()\n  obj.sockets = sockets\n  obj.destroy = destroy\n  obj.add = add\n\n  return obj\n\n  function add (socket) {\n    sockets.push(socket)\n    socket.on('close', onclose)\n    obj.emit('connection', socket)\n  }\n\n  function onclose () {\n    sockets.splice(sockets.indexOf(this), 1)\n    obj.emit('close', this)\n    if (sockets.length === 0) obj.emit('idle')\n  }\n\n  function destroy () {\n    for (var i = 0; i < sockets.length; i++) {\n      sockets[i].destroy()\n    }\n  }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/connections/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/connections/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/connections/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/connections/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/connections/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/connections/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/connections/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/connections/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/connections/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/connections/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/connections/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/connections/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/connections/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/connections/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/connections/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/connections/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/connections/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/connections/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/connections/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/connections/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/connections/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/connections/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/connections/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/connections/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/connections/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/connections/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/connections/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/connections/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/connections/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/connections/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/connections/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/connections/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/connections/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/connections/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/connections/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/connections/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/connections/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}}],"sources":{"node_modules/connections/index.js":"var events = require('events')\n\nmodule.exports = function (servers) {\n  var sockets = []\n\n  if (!Array.isArray(servers)) servers = [servers]\n\n  for (var i = 0; i < servers.length; i++) {\n    servers[i].on('connection', add)\n  }\n\n  var obj = new events.EventEmitter()\n  obj.sockets = sockets\n  obj.destroy = destroy\n  obj.add = add\n\n  return obj\n\n  function add (socket) {\n    sockets.push(socket)\n    socket.on('close', onclose)\n    obj.emit('connection', socket)\n  }\n\n  function onclose () {\n    sockets.splice(sockets.indexOf(this), 1)\n    obj.emit('close', this)\n    if (sockets.length === 0) obj.emit('idle')\n  }\n\n  function destroy () {\n    for (var i = 0; i < sockets.length; i++) {\n      sockets[i].destroy()\n    }\n  }\n}\n"},"lineCount":37}},"error":null,"hash":"8a1acb915c60dd7c11e85010c4afd260","cacheData":{"env":{}}}