{"id":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","dependencies":[{"name":"E:\\D\\WEBGLWITHPARCEL\\websiteWithWEBGL2\\package.json","includedInParent":true,"mtime":1630849169105},{"name":"E:\\D\\WEBGLWITHPARCEL\\websiteWithWEBGL2\\node_modules\\k-rpc-socket\\node_modules\\bencode\\package.json","includedInParent":true,"mtime":1630848962708},{"name":"./util.js","loc":{"line":1,"column":40},"parent":"E:\\D\\WEBGLWITHPARCEL\\websiteWithWEBGL2\\node_modules\\k-rpc-socket\\node_modules\\bencode\\lib\\encoding-length.js","resolved":"E:\\D\\WEBGLWITHPARCEL\\websiteWithWEBGL2\\node_modules\\k-rpc-socket\\node_modules\\bencode\\lib\\util.js"},{"name":"buffer","parent":"E:\\D\\WEBGLWITHPARCEL\\websiteWithWEBGL2\\node_modules\\k-rpc-socket\\node_modules\\bencode\\lib\\encoding-length.js","resolved":"E:\\D\\WEBGLWITHPARCEL\\websiteWithWEBGL2\\node_modules\\buffer\\index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nconst { digitCount, getType } = require('./util.js')\n\nfunction listLength (list) {\n  let length = 1 + 1 // type marker + end-of-type marker\n\n  for (const value of list) {\n    length += encodingLength(value)\n  }\n\n  return length\n}\n\nfunction mapLength (map) {\n  let length = 1 + 1 // type marker + end-of-type marker\n\n  for (const [key, value] of map) {\n    const keyLength = Buffer.byteLength(key)\n    length += digitCount(keyLength) + 1 + keyLength\n    length += encodingLength(value)\n  }\n\n  return length\n}\n\nfunction objectLength (value) {\n  let length = 1 + 1 // type marker + end-of-type marker\n  const keys = Object.keys(value)\n\n  for (let i = 0; i < keys.length; i++) {\n    const keyLength = Buffer.byteLength(keys[i])\n    length += digitCount(keyLength) + 1 + keyLength\n    length += encodingLength(value[keys[i]])\n  }\n\n  return length\n}\n\nfunction stringLength (value) {\n  const length = Buffer.byteLength(value)\n  return digitCount(length) + 1 + length\n}\n\nfunction arrayBufferLength (value) {\n  const length = value.byteLength - value.byteOffset\n  return digitCount(length) + 1 + length\n}\n\nfunction encodingLength (value) {\n  const length = 0\n\n  if (value == null) return length\n\n  const type = getType(value)\n\n  switch (type) {\n    case 'buffer': return digitCount(value.length) + 1 + value.length\n    case 'arraybufferview': return arrayBufferLength(value)\n    case 'string': return stringLength(value)\n    case 'array': case 'set': return listLength(value)\n    case 'number': return 1 + digitCount(Math.floor(value)) + 1\n    case 'bigint': return 1 + value.toString().length + 1\n    case 'object': return objectLength(value)\n    case 'map': return mapLength(value)\n    default:\n      throw new TypeError(`Unsupported value of type \"${type}\"`)\n  }\n}\n\nmodule.exports = encodingLength\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}}],"sources":{"node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js":"const { digitCount, getType } = require('./util.js')\n\nfunction listLength (list) {\n  let length = 1 + 1 // type marker + end-of-type marker\n\n  for (const value of list) {\n    length += encodingLength(value)\n  }\n\n  return length\n}\n\nfunction mapLength (map) {\n  let length = 1 + 1 // type marker + end-of-type marker\n\n  for (const [key, value] of map) {\n    const keyLength = Buffer.byteLength(key)\n    length += digitCount(keyLength) + 1 + keyLength\n    length += encodingLength(value)\n  }\n\n  return length\n}\n\nfunction objectLength (value) {\n  let length = 1 + 1 // type marker + end-of-type marker\n  const keys = Object.keys(value)\n\n  for (let i = 0; i < keys.length; i++) {\n    const keyLength = Buffer.byteLength(keys[i])\n    length += digitCount(keyLength) + 1 + keyLength\n    length += encodingLength(value[keys[i]])\n  }\n\n  return length\n}\n\nfunction stringLength (value) {\n  const length = Buffer.byteLength(value)\n  return digitCount(length) + 1 + length\n}\n\nfunction arrayBufferLength (value) {\n  const length = value.byteLength - value.byteOffset\n  return digitCount(length) + 1 + length\n}\n\nfunction encodingLength (value) {\n  const length = 0\n\n  if (value == null) return length\n\n  const type = getType(value)\n\n  switch (type) {\n    case 'buffer': return digitCount(value.length) + 1 + value.length\n    case 'arraybufferview': return arrayBufferLength(value)\n    case 'string': return stringLength(value)\n    case 'array': case 'set': return listLength(value)\n    case 'number': return 1 + digitCount(Math.floor(value)) + 1\n    case 'bigint': return 1 + value.toString().length + 1\n    case 'object': return objectLength(value)\n    case 'map': return mapLength(value)\n    default:\n      throw new TypeError(`Unsupported value of type \"${type}\"`)\n  }\n}\n\nmodule.exports = encodingLength\n"},"lineCount":71}},"error":null,"hash":"bb580544e962ef0175d9b3eafdf43a63","cacheData":{"env":{}}}