{"id":"node_modules/dat-node/lib/network.js","dependencies":[{"name":"E:\\D\\WEBGLWITHPARCEL\\websiteWithWEBGL2\\package.json","includedInParent":true,"mtime":1630849169105},{"name":"E:\\D\\WEBGLWITHPARCEL\\websiteWithWEBGL2\\node_modules\\dat-node\\package.json","includedInParent":true,"mtime":1630848945166},{"name":"assert","loc":{"line":1,"column":21},"parent":"E:\\D\\WEBGLWITHPARCEL\\websiteWithWEBGL2\\node_modules\\dat-node\\lib\\network.js","resolved":"E:\\D\\WEBGLWITHPARCEL\\websiteWithWEBGL2\\node_modules\\assert\\assert.js"},{"name":"dat-swarm-defaults","loc":{"line":2,"column":28},"parent":"E:\\D\\WEBGLWITHPARCEL\\websiteWithWEBGL2\\node_modules\\dat-node\\lib\\network.js","resolved":"E:\\D\\WEBGLWITHPARCEL\\websiteWithWEBGL2\\node_modules\\dat-swarm-defaults\\index.js"},{"name":"discovery-swarm","loc":{"line":3,"column":19},"parent":"E:\\D\\WEBGLWITHPARCEL\\websiteWithWEBGL2\\node_modules\\dat-node\\lib\\network.js","resolved":"E:\\D\\WEBGLWITHPARCEL\\websiteWithWEBGL2\\node_modules\\discovery-swarm\\index.js"}],"generated":{"js":"var assert = require('assert')\nvar swarmDefaults = require('dat-swarm-defaults')\nvar disc = require('discovery-swarm')\n\nmodule.exports = function (archive, opts, cb) {\n  assert.ok(archive, 'dat-node: lib/network archive required')\n  assert.ok(opts, 'dat-node: lib/network opts required')\n\n  var DEFAULT_PORT = 3282\n  var swarmOpts = Object.assign({\n    hash: false,\n    stream: opts.stream\n  }, opts)\n  var swarm = disc(swarmDefaults(swarmOpts))\n  swarm.once('error', function () {\n    swarm.listen(0)\n  })\n  swarm.listen(opts.port || DEFAULT_PORT)\n  swarm.join(archive.discoveryKey, { announce: !(opts.upload === false) }, cb)\n  swarm.options = swarm._options\n  return swarm\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/dat-node/lib/network.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/dat-node/lib/network.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/dat-node/lib/network.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/dat-node/lib/network.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/dat-node/lib/network.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/dat-node/lib/network.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/dat-node/lib/network.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/dat-node/lib/network.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/dat-node/lib/network.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/dat-node/lib/network.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/dat-node/lib/network.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/dat-node/lib/network.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/dat-node/lib/network.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/dat-node/lib/network.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/dat-node/lib/network.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/dat-node/lib/network.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/dat-node/lib/network.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/dat-node/lib/network.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/dat-node/lib/network.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/dat-node/lib/network.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/dat-node/lib/network.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/dat-node/lib/network.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/dat-node/lib/network.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}}],"sources":{"node_modules/dat-node/lib/network.js":"var assert = require('assert')\nvar swarmDefaults = require('dat-swarm-defaults')\nvar disc = require('discovery-swarm')\n\nmodule.exports = function (archive, opts, cb) {\n  assert.ok(archive, 'dat-node: lib/network archive required')\n  assert.ok(opts, 'dat-node: lib/network opts required')\n\n  var DEFAULT_PORT = 3282\n  var swarmOpts = Object.assign({\n    hash: false,\n    stream: opts.stream\n  }, opts)\n  var swarm = disc(swarmDefaults(swarmOpts))\n  swarm.once('error', function () {\n    swarm.listen(0)\n  })\n  swarm.listen(opts.port || DEFAULT_PORT)\n  swarm.join(archive.discoveryKey, { announce: !(opts.upload === false) }, cb)\n  swarm.options = swarm._options\n  return swarm\n}\n"},"lineCount":23}},"error":null,"hash":"d0e2959bcb9c982f7d1c33abbfba3f9b","cacheData":{"env":{}}}